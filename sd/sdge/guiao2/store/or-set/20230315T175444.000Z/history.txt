2	:invoke	:remove	0
2	:info	:remove	0	indeterminate: throw+: {:type :rpc-error, :code 200, :name :unknown, :definite? false, :body {:msg_id 2, :in_reply_to 1, :type "error", :code 200, :message "element not in set"}}
5	:invoke	:read	nil
5	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 3, :in_reply_to 1, :type "read_ok", :values {"0" []}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
0	:invoke	:add	0
8	:invoke	:read	nil
8	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4, :in_reply_to 1, :type "read_ok", :values {"0" [["n0" 1]]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
1	:invoke	:remove	0
11	:invoke	:add	1
0	:info	:add	0	indeterminate: Client read timeout
1	:info	:remove	0	indeterminate: Client read timeout
11	:info	:add	1	indeterminate: Client read timeout
4	:invoke	:read	nil
14	:invoke	:read	nil
3	:invoke	:read	nil
3	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4, :in_reply_to 1, :type "read_ok", :values {"0" ["n0" 1]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
14	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 7,
 :in_reply_to 1,
 :type "read_ok",
 :values {"0" [["n0" 1]], "1" ["n2" 1]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
4	:info	:read	nil	indeterminate: Client read timeout
