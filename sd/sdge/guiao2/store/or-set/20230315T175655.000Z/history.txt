0	:invoke	:remove	0
0	:info	:remove	0	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 2, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
1	:invoke	:remove	0
1	:info	:remove	0	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 2, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
3	:invoke	:remove	1
3	:info	:remove	1	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 3, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
4	:invoke	:remove	2
4	:info	:remove	2	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 3, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
6	:invoke	:read	nil
6	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4, :in_reply_to 1, :type "read_ok", :values {}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
7	:invoke	:remove	3
7	:info	:remove	3	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 4, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
10	:invoke	:remove	4
10	:info	:remove	4	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 5, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
2	:invoke	:add	0
9	:invoke	:read	nil
9	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 5, :in_reply_to 1, :type "read_ok", :values {"0" [["n2" 1]]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
13	:invoke	:add	1
12	:invoke	:remove	4
12	:info	:remove	4	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 6, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
15	:invoke	:read	nil
15	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 7, :in_reply_to 1, :type "read_ok", :values {"0" [["n2" 1]]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
18	:invoke	:read	nil
18	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 8, :in_reply_to 1, :type "read_ok", :values {"0" [["n2" 1]]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
21	:invoke	:remove	5
21	:info	:remove	5	indeterminate: throw+: {:type :rpc-error, :code 20, :name :unknown, :definite? false, :body {:msg_id 9, :in_reply_to 1, :type "error", :code 20, :message "element not in set"}}
24	:invoke	:add	2
2	:info	:add	0	indeterminate: Client read timeout
13	:info	:add	1	indeterminate: Client read timeout
24	:info	:add	2	indeterminate: Client read timeout
27	:invoke	:read	nil
16	:invoke	:read	nil
5	:invoke	:read	nil
5	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4, :in_reply_to 1, :type "read_ok", :values {"0" ["n2" 1]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
27	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 12,
 :in_reply_to 1,
 :type "read_ok",
 :values {"0" [["n2" 1]], "2" ["n0" 1]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
16	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 8,
 :in_reply_to 1,
 :type "read_ok",
 :values {"0" [["n2" 1]], "1" ["n1" 1]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
