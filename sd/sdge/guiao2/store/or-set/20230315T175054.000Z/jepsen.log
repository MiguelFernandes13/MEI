2023-03-15 17:50:54,614{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w or-set --bin or-set.py --time-limit 5 --node-count 3
2023-03-15 17:50:54,700{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.clj_ssh.Remote{:concurrency-limit 8,
                                                                                                            :conn-spec nil,
                                                                                                            :session nil,
                                                                                                            :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 3
 :max-txn-length 4
 :concurrency 3
 :db
 #object[maelstrom.db$db$reify__16817
         "0x7334dcbe"
         "maelstrom.db$db$reify__16817@7334dcbe"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "or-set"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x1d1a706" "2023-03-15T17:50:54.000Z"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15673
         "0x5e136445"
         "maelstrom.net$jepsen_net$reify__15673@5e136445"]
 :client
 #object[maelstrom.workload.or_set$client$reify__18760
         "0x3c9e82a6"
         "maelstrom.workload.or_set$client$reify__18760@3c9e82a6"]
 :final-generator
 (jepsen.generator.EachThread {:fresh-gen {:f :read}, :gens {}})
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x4235e01b"
         "java.util.concurrent.CyclicBarrier@4235e01b"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__8787
         "0x835718b"
         "jepsen.checker$compose$reify__8787@835718b"]
 :argv
 ("test"
  "-w"
  "or-set"
  "--bin"
  "or-set.py"
  "--time-limit"
  "5"
  "--node-count"
  "3")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__17089@2e6dc94c"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__17070@6c39ba30"]})
 :nodes ["n0" "n1" "n2"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "or-set.py"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 5000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads {:f #{:nemesis}, :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #object[clojure.core$complement$fn__5654
                                      "0x665fb1d8"
                                      "clojure.core$complement$fn__5654@665fb1d8"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 400000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :add, :value 0}
                                                 {:f :add, :value 1}
                                                 {:f :add, :value 2}
                                                 {:f :add, :value 3}
                                                 {:f :add, :value 4}
                                                 {:f :add, :value 5}
                                                 {:f :add, :value 6}
                                                 {:f :add, :value 7}
                                                 ...)
                                                ({:f :remove, :value 0}
                                                 {:f :remove, :value 0}
                                                 {:f :remove, :value 1}
                                                 {:f :remove, :value 2}
                                                 {:f :remove, :value 3}
                                                 {:f :remove, :value 4}
                                                 {:f :remove, :value 4}
                                                 {:f :remove, :value 5}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads {:f #{:nemesis}, :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #object[clojure.core$complement$fn__5654
                      "0x43376a03"
                      "clojure.core$complement$fn__5654@43376a03"],
           :gen (jepsen.generator.EachThread {:fresh-gen {:f :read}, :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15676
         "0x9b84747"
         "maelstrom.net$jepsen_os$reify__15676@9b84747"]
 :time-limit 5
 :workload :or-set
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-03-15 17:50:54,707{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-03-15 17:50:54,708{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-03-15 17:50:54,710{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-03-15 17:50:54,711{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2023-03-15 17:50:54,711{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2023-03-15 17:50:54,712{GMT}	INFO	[jepsen node n2] maelstrom.process: launching or-set.py []
2023-03-15 17:50:54,712{GMT}	INFO	[jepsen node n1] maelstrom.process: launching or-set.py []
2023-03-15 17:50:54,714{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-03-15 17:50:54,716{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-03-15 17:50:54,717{GMT}	INFO	[jepsen node n0] maelstrom.process: launching or-set.py []
2023-03-15 17:50:54,758{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-03-15 17:50:54,770{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:add	0
2023-03-15 17:50:54,847{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:add	1
2023-03-15 17:50:55,154{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:remove	0
2023-03-15 17:50:59,777{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Client read timeout
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$recv_BANG_.invokeStatic(client.clj:159)
	at maelstrom.client$recv_BANG_.invoke(client.clj:142)
	at maelstrom.client$send_PLUS_recv_BANG_.invokeStatic(client.clj:184)
	at maelstrom.client$send_PLUS_recv_BANG_.invoke(client.clj:180)
	at maelstrom.client$rpc_BANG_.invokeStatic(client.clj:210)
	at maelstrom.client$rpc_BANG_.invoke(client.clj:201)
	at maelstrom.workload.or_set$fn__18727$add_BANG___18728.invoke(or_set.clj:13)
	at maelstrom.workload.or_set$fn__18727$add_BANG___18728.invoke(or_set.clj:13)
	at maelstrom.workload.or_set$client$reify__18760.invoke_BANG_(or_set.clj:47)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:62)
	at jepsen.generator.interpreter$spawn_worker$fn__9720$fn__9721.invoke(interpreter.clj:137)
	at jepsen.generator.interpreter$spawn_worker$fn__9720.invoke(interpreter.clj:120)
	at clojure.core$binding_conveyor_fn$fn__5739.invoke(core.clj:2030)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-15 17:50:59,856{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Client read timeout
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$recv_BANG_.invokeStatic(client.clj:159)
	at maelstrom.client$recv_BANG_.invoke(client.clj:142)
	at maelstrom.client$send_PLUS_recv_BANG_.invokeStatic(client.clj:184)
	at maelstrom.client$send_PLUS_recv_BANG_.invoke(client.clj:180)
	at maelstrom.client$rpc_BANG_.invokeStatic(client.clj:210)
	at maelstrom.client$rpc_BANG_.invoke(client.clj:201)
	at maelstrom.workload.or_set$fn__18727$add_BANG___18728.invoke(or_set.clj:13)
	at maelstrom.workload.or_set$fn__18727$add_BANG___18728.invoke(or_set.clj:13)
	at maelstrom.workload.or_set$client$reify__18760.invoke_BANG_(or_set.clj:47)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:62)
	at jepsen.generator.interpreter$spawn_worker$fn__9720$fn__9721.invoke(interpreter.clj:137)
	at jepsen.generator.interpreter$spawn_worker$fn__9720.invoke(interpreter.clj:120)
	at clojure.core$binding_conveyor_fn$fn__5739.invoke(core.clj:2030)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-15 17:51:00,159{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Client read timeout
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$recv_BANG_.invokeStatic(client.clj:159)
	at maelstrom.client$recv_BANG_.invoke(client.clj:142)
	at maelstrom.client$send_PLUS_recv_BANG_.invokeStatic(client.clj:184)
	at maelstrom.client$send_PLUS_recv_BANG_.invoke(client.clj:180)
	at maelstrom.client$rpc_BANG_.invokeStatic(client.clj:210)
	at maelstrom.client$rpc_BANG_.invoke(client.clj:201)
	at maelstrom.workload.or_set$fn__18738$remove_BANG___18739.invoke(or_set.clj:20)
	at maelstrom.workload.or_set$fn__18738$remove_BANG___18739.invoke(or_set.clj:20)
	at maelstrom.workload.or_set$client$reify__18760.invoke_BANG_(or_set.clj:50)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:62)
	at jepsen.generator.interpreter$spawn_worker$fn__9720$fn__9721.invoke(interpreter.clj:137)
	at jepsen.generator.interpreter$spawn_worker$fn__9720.invoke(interpreter.clj:120)
	at clojure.core$binding_conveyor_fn$fn__5739.invoke(core.clj:2030)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-15 17:51:00,163{GMT}	INFO	[jepsen worker 2] jepsen.generator.interpreter: Waiting for recovery...
2023-03-15 17:51:10,171{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:read	nil
2023-03-15 17:51:10,171{GMT}	INFO	[jepsen worker 2] jepsen.util: 5	:invoke	:read	nil
2023-03-15 17:51:10,171{GMT}	INFO	[jepsen worker 1] jepsen.util: 4	:invoke	:read	nil
2023-03-15 17:51:10,194{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4, :in_reply_to 1, :type "read_ok", :values {"0" ["n2" 1]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:249)
	at maelstrom.client$check_body.invoke(client.clj:242)
	at maelstrom.workload.or_set$fn__18749$read__18750.invoke(or_set.clj:27)
	at maelstrom.workload.or_set$fn__18749$read__18750.invoke(or_set.clj:27)
	at maelstrom.workload.or_set$client$reify__18760.invoke_BANG_(or_set.clj:55)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:62)
	at jepsen.generator.interpreter$spawn_worker$fn__9720$fn__9721.invoke(interpreter.clj:137)
	at jepsen.generator.interpreter$spawn_worker$fn__9720.invoke(interpreter.clj:120)
	at clojure.core$binding_conveyor_fn$fn__5739.invoke(core.clj:2030)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-15 17:51:15,175{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Client read timeout
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$recv_BANG_.invokeStatic(client.clj:159)
	at maelstrom.client$recv_BANG_.invoke(client.clj:142)
	at maelstrom.client$send_PLUS_recv_BANG_.invokeStatic(client.clj:184)
	at maelstrom.client$send_PLUS_recv_BANG_.invoke(client.clj:180)
	at maelstrom.client$rpc_BANG_.invokeStatic(client.clj:210)
	at maelstrom.client$rpc_BANG_.invoke(client.clj:201)
	at maelstrom.workload.or_set$fn__18749$read__18750.invoke(or_set.clj:27)
	at maelstrom.workload.or_set$fn__18749$read__18750.invoke(or_set.clj:27)
	at maelstrom.workload.or_set$client$reify__18760.invoke_BANG_(or_set.clj:55)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:62)
	at jepsen.generator.interpreter$spawn_worker$fn__9720$fn__9721.invoke(interpreter.clj:137)
	at jepsen.generator.interpreter$spawn_worker$fn__9720.invoke(interpreter.clj:120)
	at clojure.core$binding_conveyor_fn$fn__5739.invoke(core.clj:2030)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-15 17:51:15,175{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Client read timeout
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$recv_BANG_.invokeStatic(client.clj:159)
	at maelstrom.client$recv_BANG_.invoke(client.clj:142)
	at maelstrom.client$send_PLUS_recv_BANG_.invokeStatic(client.clj:184)
	at maelstrom.client$send_PLUS_recv_BANG_.invoke(client.clj:180)
	at maelstrom.client$rpc_BANG_.invokeStatic(client.clj:210)
	at maelstrom.client$rpc_BANG_.invoke(client.clj:201)
	at maelstrom.workload.or_set$fn__18749$read__18750.invoke(or_set.clj:27)
	at maelstrom.workload.or_set$fn__18749$read__18750.invoke(or_set.clj:27)
	at maelstrom.workload.or_set$client$reify__18760.invoke_BANG_(or_set.clj:55)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:62)
	at jepsen.generator.interpreter$spawn_worker$fn__9720$fn__9721.invoke(interpreter.clj:137)
	at jepsen.generator.interpreter$spawn_worker$fn__9720.invoke(interpreter.clj:120)
	at clojure.core$binding_conveyor_fn$fn__5739.invoke(core.clj:2030)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-15 17:51:15,189{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2023-03-15 17:51:15,189{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2023-03-15 17:51:15,189{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2023-03-15 17:51:16,181{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2023-03-15 17:51:16,183{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n1 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"dest": "c0", "src": "n1", "body": {"msg_id": 1, "in_reply_to": 1, "type": "init_ok"}}

And to STDERR:

DEBUG:root:received {"id":0,"src":"c0","dest":"n1","body":{"type":"init","node_id":"n1","node_ids":["n0","n1","n2"],"msg_id":1}}
INFO:root:node n1 initialized
DEBUG:root:sending {"dest": "c0", "src": "n1", "body": {"msg_id": 1, "in_reply_to": 1, "type": "init_ok"}}
DEBUG:root:received {"id":8,"src":"n2","dest":"n1","body":{"msg_id":3,"type":"fwd_add","element":0,"id":["n2",1],"r":[],"vv":{"n0":0,"n1":0,"n2":1}}}
Traceback (most recent call last):
  File "/home/miguel/uni/4ano/sd/sdge/guiao2/or-set.py", line 81, in <module>
    m[msg.body.element].append(msg.body.m)
AttributeError: 'types.SimpleNamespace' object has no attribute 'm'

Full STDERR logs are available in /home/miguel/uni/4ano/sd/sdge/guiao2/store/or-set/20230315T175054.000Z/node-logs/n1.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16817.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__3462$G__3458__3466.invoke(db.clj:11)
	at jepsen.db$fn__3462$G__3457__3471.invoke(db.clj:11)
	at clojure.core$partial$fn__5824.invoke(core.clj:2625)
	at jepsen.control$on_nodes$fn__3339.invoke(control.clj:309)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__213$fn__214.invoke(core.clj:146)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:833)
