2	:invoke	:add	0
1	:invoke	:add	1
0	:invoke	:add	2
2	:info	:add	0	indeterminate: Client read timeout
1	:info	:add	1	indeterminate: Client read timeout
0	:info	:add	2	indeterminate: Client read timeout
4	:invoke	:read	nil
5	:invoke	:read	nil
3	:invoke	:read	nil
5	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4,
 :in_reply_to 1,
 :type "read_ok",
 :values {"0" [["n2" 1]], "1" [["n1" 1]], "2" [["n0" 1]]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
3	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4,
 :in_reply_to 1,
 :type "read_ok",
 :values {"0" [["n2" 1]], "1" [["n1" 1]], "2" [["n0" 1]]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
4	:info	:read	nil	indeterminate: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"), :value [Any], {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4,
 :in_reply_to 1,
 :type "read_ok",
 :values {"0" [["n2" 1]], "1" [["n1" 1]], "2" [["n0" 1]]}}

This is malformed because:

{:value missing-required-key, :values disallowed-key}

See doc/protocol.md for more guidance.
