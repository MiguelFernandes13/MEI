{:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? false,
         :count 3,
         :ok-count 0,
         :fail-count 0,
         :info-count 3,
         :by-f {:cbcast {:valid? false,
                         :count 3,
                         :ok-count 0,
                         :fail-count 0,
                         :info-count 3}}},
 :net {:all {:send-count 9,
             :recv-count 9,
             :msg-count 9,
             :msgs-per-op 3.0},
       :clients {:send-count 9, :recv-count 9, :msg-count 9},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? :unknown,
            :error "java.lang.IllegalArgumentException: No matching clause: :info\n at maelstrom.workload.cbcast$build_dependencies$fn__18687.invoke (cbcast.clj:46)\n    clojure.lang.PersistentVector.reduce (PersistentVector.java:343)\n    clojure.core$reduce.invokeStatic (core.clj:6827)\n    clojure.core$reduce.invoke (core.clj:6810)\n    maelstrom.workload.cbcast$build_dependencies.invokeStatic (cbcast.clj:43)\n    maelstrom.workload.cbcast$build_dependencies.invoke (cbcast.clj:41)\n    maelstrom.workload.cbcast$checker$reify__18711.check (cbcast.clj:91)\n    jepsen.checker$check_safe.invokeStatic (checker.clj:81)\n    jepsen.checker$check_safe.invoke (checker.clj:74)\n    jepsen.checker$compose$reify__8787$fn__8789.invoke (checker.clj:97)\n    clojure.core$pmap$fn__8447$fn__8448.invoke (core.clj:7022)\n    clojure.core$binding_conveyor_fn$fn__5739.invoke (core.clj:2030)\n    clojure.lang.AFn.call (AFn.java:18)\n    java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1136)\n    java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:635)\n    java.lang.Thread.run (Thread.java:833)\n"},
 :valid? false}
