2023-03-01 12:35:17,485{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test --bin guiao0/lock-lamport.py --time-limit 5 --node-count 2 -w lock --concurrency 2n
2023-03-01 12:35:17,538{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 2
 :availability nil
 :max-txn-length 4
 :concurrency 4
 :db
 #object[maelstrom.db$db$reify__16144
         "0x10fef6da"
         "maelstrom.db$db$reify__16144@10fef6da"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "lock"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x74bca236" "2023-03-01T12:35:17.466Z"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15253
         "0x526fbb80"
         "maelstrom.net$jepsen_net$reify__15253@526fbb80"]
 :client
 #object[maelstrom.workload.lock$client$reify__19507
         "0x33dcbdc2"
         "maelstrom.workload.lock$client$reify__19507@33dcbdc2"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x3e37c38f"
         "java.util.concurrent.CyclicBarrier@3e37c38f"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x2f0b7b6d"
         "jepsen.checker$compose$reify__11881@2f0b7b6d"]
 :argv
 ("test"
  "--bin"
  "guiao0/lock-lamport.py"
  "--time-limit"
  "5"
  "--node-count"
  "2"
  "-w"
  "lock"
  "--concurrency"
  "2n")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16418@1766b7"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16399@56f3f9da"]})
 :nodes ["n0" "n1"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "guiao0/lock-lamport.py"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 5000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x2ff30a75"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@2ff30a75"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0xb38dc7d"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@b38dc7d"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen ({:f :lock}
                                             {:f :unlock}
                                             {:f :lock}
                                             {:f :unlock}
                                             {:f :lock}
                                             {:f :unlock}
                                             {:f :lock}
                                             {:f :unlock}
                                             ...),
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x746cb25d"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15256
         "0x7c068c7b"
         "maelstrom.net$jepsen_os$reify__15256@7c068c7b"]
 :time-limit 5
 :workload :lock
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-03-01 12:35:19,393{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-03-01 12:35:19,394{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-03-01 12:35:19,396{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-03-01 12:35:19,397{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2023-03-01 12:35:19,398{GMT}	INFO	[jepsen node n1] maelstrom.process: launching guiao0/lock-lamport.py []
2023-03-01 12:35:19,399{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-03-01 12:35:19,401{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-03-01 12:35:19,402{GMT}	INFO	[jepsen node n0] maelstrom.process: launching guiao0/lock-lamport.py []
2023-03-01 12:35:19,439{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-03-01 12:35:19,455{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-03-01 12:35:19,459{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-03-01 12:35:19,740{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-03-01 12:35:20,018{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-03-01 12:35:20,139{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-03-01 12:35:20,141{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-03-01 12:35:20,292{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:lock	nil
2023-03-01 12:35:20,296{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:lock	nil
2023-03-01 12:35:20,490{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-03-01 12:35:20,615{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:unlock	nil
2023-03-01 12:35:20,617{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:unlock	nil
2023-03-01 12:35:20,640{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:lock	nil
2023-03-01 12:35:20,643{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-03-01 12:35:20,729{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-03-01 12:35:20,731{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-03-01 12:35:20,929{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-03-01 12:35:20,932{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:lock	nil
2023-03-01 12:35:21,279{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:unlock	nil
2023-03-01 12:35:21,281{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:unlock	nil
2023-03-01 12:35:21,630{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:lock	nil
2023-03-01 12:35:21,634{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-03-01 12:35:21,855{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-03-01 12:35:21,856{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-03-01 12:35:22,242{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-03-01 12:35:24,742{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:lock	nil	:net-timeout
2023-03-01 12:35:25,019{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:lock	nil	:net-timeout
2023-03-01 12:35:26,631{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:lock	nil	:net-timeout
2023-03-01 12:35:27,242{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:lock	nil	:net-timeout
2023-03-01 12:35:27,260{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2023-03-01 12:35:27,291{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2023-03-01 12:35:27,291{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2023-03-01 12:35:28,407{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2023-03-01 12:35:28,408{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2023-03-01 12:35:28,542{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2023-03-01 12:35:28,551{GMT}	INFO	[jepsen results] jepsen.store: Wrote /home/miguel/uni/4ano/sd/sdge/store/lock/20230301T123517.466Z/results.edn
2023-03-01 12:35:28,572{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 14,
         :ok-count 10,
         :fail-count 0,
         :info-count 4,
         :by-f {:lock {:valid? true,
                       :count 9,
                       :ok-count 5,
                       :fail-count 0,
                       :info-count 4},
                :unlock {:valid? true,
                         :count 5,
                         :ok-count 5,
                         :fail-count 0,
                         :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.71428573},
 :net {:all {:send-count 45,
             :recv-count 45,
             :msg-count 45,
             :msgs-per-op 3.2142856},
       :clients {:send-count 28, :recv-count 28, :msg-count 28},
       :servers {:send-count 17,
                 :recv-count 17,
                 :msg-count 17,
                 :msgs-per-op 1.2142857},
       :valid? true},
 :workload {:valid? true, :errors []},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
