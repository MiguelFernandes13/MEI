2023-02-14 11:34:49,276{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test --bin guiao0/wrong-lock.py --time-limit 10 --node-count 1 -w lock --concurrency 3n
2023-02-14 11:34:49,372{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 3
 :db
 #object[maelstrom.db$db$reify__16144
         "0x63c78e5e"
         "maelstrom.db$db$reify__16144@63c78e5e"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "lock"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x2a6f3ac7" "2023-02-14T11:34:49.258Z"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15253
         "0x68fe866b"
         "maelstrom.net$jepsen_net$reify__15253@68fe866b"]
 :client
 #object[maelstrom.workload.lock$client$reify__19507
         "0x729feae8"
         "maelstrom.workload.lock$client$reify__19507@729feae8"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x283a5c2b"
         "java.util.concurrent.CyclicBarrier@283a5c2b"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x7bd0e2e9"
         "jepsen.checker$compose$reify__11881@7bd0e2e9"]
 :argv
 ("test"
  "--bin"
  "guiao0/wrong-lock.py"
  "--time-limit"
  "10"
  "--node-count"
  "1"
  "-w"
  "lock"
  "--concurrency"
  "3n")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16418@6701fe26"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16399@6ac49084"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "guiao0/wrong-lock.py"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 10000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x30587737"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@30587737"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x5672920"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@5672920"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen ({:f :lock}
                                             {:f :unlock}
                                             {:f :lock}
                                             {:f :unlock}
                                             {:f :lock}
                                             {:f :unlock}
                                             {:f :lock}
                                             {:f :unlock}
                                             ...),
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x377bc8da"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15256
         "0x21bf94d3"
         "maelstrom.net$jepsen_os$reify__15256@21bf94d3"]
 :time-limit 10
 :workload :lock
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-02-14 11:34:51,342{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-02-14 11:34:51,344{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-02-14 11:34:51,346{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-02-14 11:34:51,349{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-02-14 11:34:51,356{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-02-14 11:34:51,359{GMT}	INFO	[jepsen node n0] maelstrom.process: launching guiao0/wrong-lock.py []
2023-02-14 11:34:51,395{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-02-14 11:34:51,414{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:34:51,419{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:34:51,643{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:51,649{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:51,886{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:51,891{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:52,040{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:34:52,047{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:34:52,375{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:52,380{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:52,567{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:52,572{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:52,585{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:52,591{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:52,886{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:34:52,891{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:34:52,964{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:34:52,969{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:34:53,055{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:34:53,059{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:34:53,450{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:53,455{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:53,682{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:34:53,687{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:34:53,723{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:unlock	nil
2023-02-14 11:34:53,728{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:unlock	nil
2023-02-14 11:34:53,858{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:53,861{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:53,997{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:34:54,000{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:34:54,200{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:34:54,205{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:34:54,576{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:unlock	nil
2023-02-14 11:34:54,581{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:unlock	nil
2023-02-14 11:34:54,595{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:34:54,601{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:34:54,792{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:54,795{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:55,014{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:unlock	nil
2023-02-14 11:34:55,019{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:unlock	nil
2023-02-14 11:34:55,306{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:34:55,311{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:34:55,349{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:34:55,353{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:34:55,362{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:55,368{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:55,709{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:34:55,714{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:34:55,872{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:55,877{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:56,070{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:56,072{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:56,130{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:unlock	nil
2023-02-14 11:34:56,135{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:unlock	nil
2023-02-14 11:34:56,496{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:56,499{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:56,853{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:56,857{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:56,915{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:56,919{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:56,983{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:56,986{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:57,136{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:34:57,141{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:34:57,495{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:34:57,500{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:34:57,560{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:57,565{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:57,707{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:unlock	nil
2023-02-14 11:34:57,713{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:unlock	nil
2023-02-14 11:34:57,813{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:57,817{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:58,010{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:34:58,015{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:34:58,401{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:58,406{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:58,440{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:34:58,444{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:34:58,445{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:34:58,449{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:34:58,672{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:34:58,676{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:34:59,023{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:34:59,028{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:34:59,034{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:34:59,038{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:34:59,397{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:unlock	nil
2023-02-14 11:34:59,399{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:unlock	nil
2023-02-14 11:34:59,500{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:34:59,505{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:34:59,506{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:unlock	nil
2023-02-14 11:34:59,510{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:unlock	nil
2023-02-14 11:34:59,814{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:34:59,817{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:35:00,070{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:35:00,074{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:35:00,469{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:unlock	nil
2023-02-14 11:35:00,472{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:unlock	nil
2023-02-14 11:35:00,521{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:lock	nil
2023-02-14 11:35:00,524{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:lock	nil
2023-02-14 11:35:00,616{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:lock	nil
2023-02-14 11:35:00,621{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:lock	nil
2023-02-14 11:35:00,870{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:unlock	nil
2023-02-14 11:35:00,873{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:unlock	nil
2023-02-14 11:35:01,209{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:lock	nil
2023-02-14 11:35:01,212{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:lock	nil
2023-02-14 11:35:01,253{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2023-02-14 11:35:01,336{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2023-02-14 11:35:02,365{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2023-02-14 11:35:02,375{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2023-02-14 11:35:02,540{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2023-02-14 11:35:02,551{GMT}	INFO	[jepsen results] jepsen.store: Wrote /home/miguel/uni/4ano/sd/sdge/store/lock/20230214T113449.258Z/results.edn
2023-02-14 11:35:02,577{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 53,
         :ok-count 53,
         :fail-count 0,
         :info-count 0,
         :by-f {:lock {:valid? true,
                       :count 28,
                       :ok-count 28,
                       :fail-count 0,
                       :info-count 0},
                :unlock {:valid? true,
                         :count 25,
                         :ok-count 25,
                         :fail-count 0,
                         :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 108,
             :recv-count 108,
             :msg-count 108,
             :msgs-per-op 2.037736},
       :clients {:send-count 108, :recv-count 108, :msg-count 108},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? false,
            :errors ["already acquired by process 0 when lock completed at {:index 3, :time 254560100, :type :ok, :process 2, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 4, :time 488956500, :type :invoke, :process 2, :f :unlock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 7, :time 652482000, :type :ok, :process 1, :f :lock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 9, :time 985386800, :type :ok, :process 2, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 10, :time 1170508900, :type :invoke, :process 2, :f :unlock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 13, :time 1196330200, :type :ok, :process 2, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 14, :time 1489462200, :type :invoke, :process 1, :f :unlock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 17, :time 1574764000, :type :ok, :process 1, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 18, :time 1659403700, :type :invoke, :process 1, :f :unlock, :value nil}"
                     "lock not owned when unlock invoked at {:index 20, :time 2053394300, :type :invoke, :process 2, :f :unlock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 23, :time 2292346800, :type :ok, :process 1, :f :lock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 29, :time 2604901200, :type :ok, :process 0, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 30, :time 2803674700, :type :invoke, :process 1, :f :unlock, :value nil}"
                     "lock not owned when unlock invoked at {:index 32, :time 3180092800, :type :invoke, :process 0, :f :unlock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 35, :time 3206095700, :type :ok, :process 0, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 38, :time 3617432300, :type :invoke, :process 0, :f :unlock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 43, :time 3958640900, :type :ok, :process 1, :f :lock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 45, :time 3973413400, :type :ok, :process 2, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 46, :time 4312949700, :type :invoke, :process 1, :f :unlock, :value nil}"
                     "lock not owned when unlock invoked at {:index 48, :time 4475583800, :type :invoke, :process 2, :f :unlock, :value nil}"
                     "already acquired by process 0 when lock completed at {:index 51, :time 4677631900, :type :ok, :process 2, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 54, :time 5099878700, :type :invoke, :process 2, :f :unlock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 63, :time 5746456900, :type :ok, :process 1, :f :lock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 65, :time 6105294900, :type :ok, :process 0, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 68, :time 6311047700, :type :invoke, :process 0, :f :unlock, :value nil}"
                     "lock not owned when unlock invoked at {:index 72, :time 6614565600, :type :invoke, :process 1, :f :unlock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 79, :time 7054422800, :type :ok, :process 0, :f :lock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 81, :time 7281350400, :type :ok, :process 1, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 82, :time 7626472100, :type :invoke, :process 1, :f :unlock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 85, :time 7643610200, :type :ok, :process 1, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 86, :time 8000924400, :type :invoke, :process 0, :f :unlock, :value nil}"
                     "already acquired by process 2 when lock completed at {:index 89, :time 8109856600, :type :ok, :process 0, :f :lock, :value nil}"
                     "lock not owned when unlock invoked at {:index 92, :time 8418483700, :type :invoke, :process 1, :f :unlock, :value nil}"
                     "lock not owned when unlock invoked at {:index 96, :time 9073130900, :type :invoke, :process 0, :f :unlock, :value nil}"
                     "already acquired by process 1 when lock completed at {:index 99, :time 9129468800, :type :ok, :process 0, :f :lock, :value nil}"
                     "already acquired by process 1 when lock completed at {:index 101, :time 9226075400, :type :ok, :process 2, :f :lock, :value nil}"]},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
