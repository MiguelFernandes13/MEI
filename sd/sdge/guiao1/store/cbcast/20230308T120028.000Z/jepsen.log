2023-03-08 12:00:28,155{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w cbcast --bin causal-broadcast.py --time-limit 5 --node-count 3 --concurrency 1n
2023-03-08 12:00:28,210{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.clj_ssh.Remote{:concurrency-limit 8,
                                                                                                            :conn-spec nil,
                                                                                                            :session nil,
                                                                                                            :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 3
 :max-txn-length 4
 :concurrency 3
 :db
 #object[maelstrom.db$db$reify__16817
         "0x4a28b6d0"
         "maelstrom.db$db$reify__16817@4a28b6d0"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "cbcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x64230d44" "2023-03-08T12:00:28.000Z"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15673
         "0x1ff584d7"
         "maelstrom.net$jepsen_net$reify__15673@1ff584d7"]
 :client
 #object[maelstrom.workload.cbcast$client$reify__18677
         "0x7752f9fe"
         "maelstrom.workload.cbcast$client$reify__18677@7752f9fe"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x9588bd8"
         "java.util.concurrent.CyclicBarrier@9588bd8"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__8787
         "0x75edfe9a"
         "jepsen.checker$compose$reify__8787@75edfe9a"]
 :argv
 ("test"
  "-w"
  "cbcast"
  "--bin"
  "causal-broadcast.py"
  "--time-limit"
  "5"
  "--node-count"
  "3"
  "--concurrency"
  "1n")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__17089@468d1fcc"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__17070@267093ea"]})
 :nodes ["n0" "n1" "n2"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "causal-broadcast.py"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 5000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads {:f #{:nemesis}, :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #object[clojure.core$complement$fn__5654
                              "0x349e166"
                              "clojure.core$complement$fn__5654@349e166"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen ({:f :cbcast, :value 1}
                                {:f :cbcast, :value 2}
                                {:f :cbcast, :value 3}
                                {:f :cbcast, :value 4}
                                {:f :cbcast, :value 5}
                                {:f :cbcast, :value 6}
                                {:f :cbcast, :value 7}
                                {:f :cbcast, :value 8}
                                ...)})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15676
         "0x68fd0fba"
         "maelstrom.net$jepsen_os$reify__15676@68fd0fba"]
 :time-limit 5
 :workload :cbcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-03-08 12:00:28,218{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-03-08 12:00:28,220{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-03-08 12:00:28,223{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-03-08 12:00:28,225{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2023-03-08 12:00:28,225{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2023-03-08 12:00:28,227{GMT}	INFO	[jepsen node n2] maelstrom.process: launching causal-broadcast.py []
2023-03-08 12:00:28,227{GMT}	INFO	[jepsen node n1] maelstrom.process: launching causal-broadcast.py []
2023-03-08 12:00:28,228{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-03-08 12:00:28,233{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-03-08 12:00:28,234{GMT}	INFO	[jepsen node n0] maelstrom.process: launching causal-broadcast.py []
2023-03-08 12:00:28,276{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-03-08 12:00:28,288{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	1
2023-03-08 12:00:28,292{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:28,455{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	2
2023-03-08 12:00:28,462{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:28,649{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:cbcast	3
2023-03-08 12:00:28,716{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:cbcast	4
2023-03-08 12:00:28,774{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	5
2023-03-08 12:00:28,780{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:28,836{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	6
2023-03-08 12:00:28,842{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:28,895{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	7
2023-03-08 12:00:28,902{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:28,903{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	8
2023-03-08 12:00:28,910{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:29,045{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	9
2023-03-08 12:00:29,053{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:29,310{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	10
2023-03-08 12:00:29,315{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:29,583{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	11
2023-03-08 12:00:29,590{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:29,776{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	12
2023-03-08 12:00:29,782{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:29,942{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	13
2023-03-08 12:00:29,948{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:30,335{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	14
2023-03-08 12:00:30,344{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:30,478{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	15
2023-03-08 12:00:30,486{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:30,672{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	16
2023-03-08 12:00:30,677{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:30,822{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	17
2023-03-08 12:00:30,829{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:30,904{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	18
2023-03-08 12:00:30,910{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:31,007{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	19
2023-03-08 12:00:31,014{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:31,372{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	20
2023-03-08 12:00:31,378{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:31,428{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	21
2023-03-08 12:00:31,436{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:31,533{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	22
2023-03-08 12:00:31,538{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:31,888{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	23
2023-03-08 12:00:31,894{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:32,023{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	24
2023-03-08 12:00:32,031{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:32,389{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	25
2023-03-08 12:00:32,393{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:32,741{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	26
2023-03-08 12:00:32,750{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:33,117{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:cbcast	27
2023-03-08 12:00:33,124{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:cbcast	[]
2023-03-08 12:00:33,658{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:cbcast	3	:net-timeout
2023-03-08 12:00:33,720{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:cbcast	4	:net-timeout
2023-03-08 12:00:33,736{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2023-03-08 12:00:33,736{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2023-03-08 12:00:33,736{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2023-03-08 12:00:34,128{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2023-03-08 12:00:34,131{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n0 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"dest": "c2", "src": "n0", "body": {"msg_id": 1, "in_reply_to": 1, "type": "init_ok"}}

And to STDERR:

DEBUG:root:received {"id":2,"src":"c2","dest":"n0","body":{"type":"init","node_id":"n0","node_ids":["n0","n1","n2"],"msg_id":1}}
INFO:root:node n0 initialized
DEBUG:root:sending {"dest": "c2", "src": "n0", "body": {"msg_id": 1, "in_reply_to": 1, "type": "init_ok"}}
DEBUG:root:received {"id":8,"src":"n2","dest":"n0","body":{"msg_id":3,"type":"fwd_msg","vv":{"n0":0,"n1":0,"n2":1},"message":1}}
Traceback (most recent call last):
  File "/home/miguel/uni/4ano/sd/sdge/guiao1/causal-broadcast.py", line 54, in <module>
    if (msg.body.vv)[msg.src]:
TypeError: 'types.SimpleNamespace' object is not subscriptable

Full STDERR logs are available in /home/miguel/uni/4ano/sd/sdge/guiao1/store/cbcast/20230308T120028.000Z/node-logs/n0.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16817.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__3462$G__3458__3466.invoke(db.clj:11)
	at jepsen.db$fn__3462$G__3457__3471.invoke(db.clj:11)
	at clojure.core$partial$fn__5824.invoke(core.clj:2625)
	at jepsen.control$on_nodes$fn__3339.invoke(control.clj:309)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__213$fn__214.invoke(core.clj:146)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:665)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1973)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1973)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:669)
	at clojure.core$bound_fn_STAR_$fn__5734.doInvoke(core.clj:2003)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:833)
